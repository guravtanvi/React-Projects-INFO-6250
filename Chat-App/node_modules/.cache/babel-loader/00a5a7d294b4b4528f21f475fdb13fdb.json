{"ast":null,"code":"var _jsxFileName = \"D:\\\\Information System\\\\info6250\\\\assignments\\\\react-chat\\\\src\\\\Login.jsx\";\nimport React, { useState } from 'react';\nimport { fetchLoginPage } from './services';\nimport errorMessages from './errorMessages';\nimport spinner from \"./spinner.svg\";\n\nconst Login = ({\n  onLogin\n}) => {\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const performLogin = () => {\n    if (!username) {\n      setError(errorMessages.MANDATORY_USERNAME);\n      return;\n    }\n\n    setError('');\n    setIsLoading(true);\n    fetchLoginPage(username).then(userInfo => {\n      onLogin(userInfo.username);\n    }).catch(err => {\n      setError(errorMessages[err.code || 'DEFAULT']);\n      setIsLoading(false);\n      setUsername('');\n    });\n  };\n\n  const onChange = e => setUsername(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"spinner\",\n    src: spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: performLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Login\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/Login.jsx"],"names":["React","useState","fetchLoginPage","errorMessages","Login","onLogin","error","setError","username","setUsername","isLoading","setIsLoading","performLogin","MANDATORY_USERNAME","then","userInfo","catch","err","code","onChange","e","target","value","spinner"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAGA,QAAMW,YAAY,GAAG,MAAM;AACzB,QAAI,CAACJ,QAAL,EAAe;AACbD,MAAAA,QAAQ,CAACJ,aAAa,CAACU,kBAAf,CAAR;AACA;AACD;;AACDN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,cAAc,CAACM,QAAD,CAAd,CACGM,IADH,CACQC,QAAQ,IAAI;AAChBV,MAAAA,OAAO,CAACU,QAAQ,CAACP,QAAV,CAAP;AACD,KAHH,EAIGQ,KAJH,CAISC,GAAG,IAAI;AACZV,MAAAA,QAAQ,CAACJ,aAAa,CAACc,GAAG,CAACC,IAAJ,IAAY,SAAb,CAAd,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KARH;AASD,GAhBD;;AAkBA,QAAMU,QAAQ,GAAGC,CAAC,IAAIX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBhB,KAAtB,CADF,eAEE;AAAO,IAAA,QAAQ,EAAEa,QAAjB;AAA2B,IAAA,KAAK,EAAEX,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGE,SAAS,gBACR;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,GAAG,EAAEa,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR;AAAQ,IAAA,OAAO,EAAEX,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CADF;AAWD,CArCD;;AAuCA,eAAeR,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { fetchLoginPage } from './services';\r\nimport errorMessages from './errorMessages';\r\nimport spinner from './spinner.svg';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [error, setError] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  const performLogin = () => {\r\n    if (!username) {\r\n      setError(errorMessages.MANDATORY_USERNAME);\r\n      return;\r\n    }\r\n    setError('');\r\n    setIsLoading(true);\r\n    fetchLoginPage(username)\r\n      .then(userInfo => {\r\n        onLogin(userInfo.username);\r\n      })\r\n      .catch(err => {\r\n        setError(errorMessages[err.code || 'DEFAULT']);\r\n        setIsLoading(false);\r\n        setUsername('');\r\n      });\r\n  };\r\n\r\n  const onChange = e => setUsername(e.target.value);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <p className=\"error\">{error}</p>\r\n      <input onChange={onChange} value={username} />\r\n      {isLoading ? (\r\n        <img alt=\"spinner\" src={spinner} />\r\n      ) : (\r\n        <button onClick={performLogin}>Login</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}