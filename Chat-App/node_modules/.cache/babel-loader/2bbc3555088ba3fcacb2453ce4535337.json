{"ast":null,"code":"var getNetworkError=function getNetworkError(err){return{code:'NETWORK-ERROR',err:err};};var checkResponse=function checkResponse(response){if(!response.ok){return response.json().then(function(err){return Promise.reject(err);});}return response.json();};export var fetchLoginStatus=function fetchLoginStatus(username){return fetch('/session',{method:'GET'}).catch(getNetworkError).then(checkResponse);};export var fetchNewMessage=function fetchNewMessage(textMsg,timestamp){return fetch('/chats',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({text:textMsg,timestamp:timestamp})}).catch(getNetworkError).then(checkResponse);};export var fetchLoginPage=function fetchLoginPage(username){return fetch('/session',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({username:username})}).catch(getNetworkError).then(checkResponse);};export var fetchMessageData=function fetchMessageData(){return fetch('/chats',{method:'GET'}).catch(getNetworkError).then(checkResponse);};export var fetchLogoutPage=function fetchLogoutPage(){return fetch('/session',{method:'DELETE'}).catch(getNetworkError).then(checkResponse);};export var fetchUsersData=function fetchUsersData(){return fetch('/users',{method:'GET'}).catch(getNetworkError).then(checkResponse);};","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/services.js"],"names":["getNetworkError","err","code","checkResponse","response","ok","json","then","Promise","reject","fetchLoginStatus","username","fetch","method","catch","fetchNewMessage","textMsg","timestamp","headers","Headers","body","JSON","stringify","text","fetchLoginPage","fetchMessageData","fetchLogoutPage","fetchUsersData"],"mappings":"AAAA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CAC7B,MAAO,CACHC,IAAI,CAAE,eADH,CAEHD,GAAG,CAAHA,GAFG,CAAP,CAIH,CALD,CAOA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAc,CAChC,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACd,MAAOD,CAAAA,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAqB,SAACN,GAAD,QAASO,CAAAA,OAAO,CAACC,MAAR,CAAeR,GAAf,CAAT,EAArB,CAAP,CACH,CACD,MAAOG,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CALD,CAOA,MAAO,IAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAc,CAC1C,MAAOC,CAAAA,KAAK,CAAC,UAAD,CAAa,CACrBC,MAAM,CAAE,KADa,CAAb,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIIJ,aAJJ,CAAP,CAKH,CANM,CASP,MAAO,IAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAUC,SAAV,CAAwB,CACnD,MAAOL,CAAAA,KAAK,CAAC,QAAD,CAAW,CACnBC,MAAM,CAAE,MADW,CAEnBK,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CACjB,eAAgB,kBADC,CAAZ,CAFU,CAKnBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,IAAI,CAAEP,OAAR,CAAiBC,SAAS,CAATA,SAAjB,CAAf,CALa,CAAX,CAAL,CAOFH,KAPE,CAOId,eAPJ,EAQFO,IARE,CAQGJ,aARH,CAAP,CASH,CAVM,CAYP,MAAO,IAAMqB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACb,QAAD,CAAc,CACxC,MAAOC,CAAAA,KAAK,CAAC,UAAD,CAAa,CACrBC,MAAM,CAAE,MADa,CAErBK,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CACjB,eAAgB,kBADC,CAAZ,CAFY,CAKrBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEX,QAAQ,CAARA,QAAF,CAAf,CALe,CAAb,CAAL,CAOFG,KAPE,CAOId,eAPJ,EAQFO,IARE,CAQIJ,aARJ,CAAP,CASH,CAVM,CAYP,MAAO,IAAMsB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAClC,MAAOb,CAAAA,KAAK,CAAC,QAAD,CAAW,CACnBC,MAAM,CAAE,KADW,CAAX,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIGJ,aAJH,CAAP,CAKH,CANM,CAQP,MAAO,IAAMuB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAOd,CAAAA,KAAK,CAAC,UAAD,CAAa,CACrBC,MAAM,CAAE,QADa,CAAb,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIIJ,aAJJ,CAAP,CAKH,CANM,CAQP,MAAO,IAAMwB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,MAAOf,CAAAA,KAAK,CAAC,QAAD,CAAW,CACnBC,MAAM,CAAE,KADW,CAAX,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIGJ,aAJH,CAAP,CAKH,CANM","sourcesContent":["const getNetworkError = (err) => {\r\n    return {\r\n        code: 'NETWORK-ERROR',\r\n        err\r\n    };\r\n};\r\n\r\nconst checkResponse = (response) => {\r\n    if (!response.ok) {\r\n        return response.json().then((err) => Promise.reject(err));\r\n    }\r\n    return response.json();\r\n}\r\n\r\nexport const fetchLoginStatus = (username) => {\r\n    return fetch('/session', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\n\r\nexport const fetchNewMessage = (textMsg, timestamp) => {\r\n    return fetch('/chats', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ text: textMsg, timestamp }),\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\nexport const fetchLoginPage = (username) => {\r\n    return fetch('/session', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ username }),\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchMessageData = () => {\r\n    return fetch('/chats', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\nexport const fetchLogoutPage = () => {\r\n    return fetch('/session', {\r\n        method: 'DELETE',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchUsersData = () => {\r\n    return fetch('/users', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}