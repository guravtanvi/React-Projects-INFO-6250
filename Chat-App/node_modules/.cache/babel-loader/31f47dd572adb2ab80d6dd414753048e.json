{"ast":null,"code":"const getNetworkError = err => {\n  return {\n    code: 'NETWORK-ERROR',\n    err\n  };\n};\n\nconst checkResponse = response => {\n  if (!response.ok) {\n    return response.json().then(err => Promise.reject(err));\n  }\n\n  return response.json();\n};\n\nexport const fetchLoginStatus = username => {\n  return fetch('/session', {\n    method: 'GET'\n  }).catch(getNetworkError).then(checkResponse);\n};\nexport const fetchNewMessage = (textMsg, timestamp) => {\n  return fetch('/chats', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      text: textMsg,\n      timestamp\n    })\n  }).catch(getNetworkError).then(checkResponse);\n};\nexport const fetchLoginPage = username => {\n  return fetch('/session', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(getNetworkError).then(checkResponse);\n};\nexport const fetchMessageData = () => {\n  return fetch('/chats', {\n    method: 'GET'\n  }).catch(getNetworkError).then(checkResponse);\n};\nexport const fetchLogoutPage = () => {\n  return fetch('/session', {\n    method: 'DELETE'\n  }).catch(getNetworkError).then(checkResponse);\n};\nexport const fetchUsersData = () => {\n  return fetch('/users', {\n    method: 'GET'\n  }).catch(getNetworkError).then(checkResponse);\n};","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/services.js"],"names":["getNetworkError","err","code","checkResponse","response","ok","json","then","Promise","reject","fetchLoginStatus","username","fetch","method","catch","fetchNewMessage","textMsg","timestamp","headers","Headers","body","JSON","stringify","text","fetchLoginPage","fetchMessageData","fetchLogoutPage","fetchUsersData"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,GAAD,IAAS;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,eADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAME,aAAa,GAAIC,QAAD,IAAc;AAChC,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,WAAOD,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAsBN,GAAD,IAASO,OAAO,CAACC,MAAR,CAAeR,GAAf,CAA9B,CAAP;AACH;;AACD,SAAOG,QAAQ,CAACE,IAAT,EAAP;AACH,CALD;;AAOA,OAAO,MAAMI,gBAAgB,GAAIC,QAAD,IAAc;AAC1C,SAAOC,KAAK,CAAC,UAAD,EAAa;AACrBC,IAAAA,MAAM,EAAE;AADa,GAAb,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIIJ,aAJJ,CAAP;AAKH,CANM;AASP,OAAO,MAAMY,eAAe,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACnD,SAAOL,KAAK,CAAC,QAAD,EAAW;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBK,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,sBAAgB;AADC,KAAZ,CAFU;AAKnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAEP,OAAR;AAAiBC,MAAAA;AAAjB,KAAf;AALa,GAAX,CAAL,CAOFH,KAPE,CAOId,eAPJ,EAQFO,IARE,CAQGJ,aARH,CAAP;AASH,CAVM;AAYP,OAAO,MAAMqB,cAAc,GAAIb,QAAD,IAAc;AACxC,SAAOC,KAAK,CAAC,UAAD,EAAa;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBK,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,sBAAgB;AADC,KAAZ,CAFY;AAKrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,MAAAA;AAAF,KAAf;AALe,GAAb,CAAL,CAOFG,KAPE,CAOId,eAPJ,EAQFO,IARE,CAQIJ,aARJ,CAAP;AASH,CAVM;AAYP,OAAO,MAAMsB,gBAAgB,GAAG,MAAM;AAClC,SAAOb,KAAK,CAAC,QAAD,EAAW;AACnBC,IAAAA,MAAM,EAAE;AADW,GAAX,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIGJ,aAJH,CAAP;AAKH,CANM;AAQP,OAAO,MAAMuB,eAAe,GAAG,MAAM;AACjC,SAAOd,KAAK,CAAC,UAAD,EAAa;AACrBC,IAAAA,MAAM,EAAE;AADa,GAAb,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIIJ,aAJJ,CAAP;AAKH,CANM;AAQP,OAAO,MAAMwB,cAAc,GAAG,MAAM;AAChC,SAAOf,KAAK,CAAC,QAAD,EAAW;AACnBC,IAAAA,MAAM,EAAE;AADW,GAAX,CAAL,CAGFC,KAHE,CAGId,eAHJ,EAIFO,IAJE,CAIGJ,aAJH,CAAP;AAKH,CANM","sourcesContent":["const getNetworkError = (err) => {\r\n    return {\r\n        code: 'NETWORK-ERROR',\r\n        err\r\n    };\r\n};\r\n\r\nconst checkResponse = (response) => {\r\n    if (!response.ok) {\r\n        return response.json().then((err) => Promise.reject(err));\r\n    }\r\n    return response.json();\r\n}\r\n\r\nexport const fetchLoginStatus = (username) => {\r\n    return fetch('/session', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\n\r\nexport const fetchNewMessage = (textMsg, timestamp) => {\r\n    return fetch('/chats', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ text: textMsg, timestamp }),\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\nexport const fetchLoginPage = (username) => {\r\n    return fetch('/session', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ username }),\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchMessageData = () => {\r\n    return fetch('/chats', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\nexport const fetchLogoutPage = () => {\r\n    return fetch('/session', {\r\n        method: 'DELETE',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then((checkResponse))\r\n};\r\n\r\nexport const fetchUsersData = () => {\r\n    return fetch('/users', {\r\n        method: 'GET',\r\n    })\r\n        .catch(getNetworkError)\r\n        .then(checkResponse)\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}