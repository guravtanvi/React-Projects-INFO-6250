{"ast":null,"code":"var _jsxFileName = \"D:\\\\Information System\\\\info6250\\\\assignments\\\\react-chat\\\\src\\\\NewMessage.jsx\";\nimport React, { useState } from 'react';\nimport errorMessages from './errorMessages';\nimport { fetchNewMessage } from './services';\n\nconst NewMessage = ({\n  onAddMessage,\n  onError\n}) => {\n  const [text, setLabel] = useState('');\n  const [error, setError] = useState('');\n\n  const setDate = date => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let time = hours + ':' + minutes + ' ' + ampm;\n    return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear() + '  ' + time;\n  };\n\n  const appendMessage = e => {\n    e.preventDefault();\n    const timestamp = setDate(new Date());\n    fetchNewMessage(text, timestamp).then(message => {\n      onAddMessage(message);\n      setLabel('');\n      setError('');\n    }).catch(err => {\n      onError(err.code);\n      setError(errorMessages[err.code || 'DEFAULT']);\n    });\n  };\n\n  const onChange = e => setLabel(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"append-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: appendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"SEND\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, error));\n};\n\nexport default NewMessage;","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/NewMessage.jsx"],"names":["React","useState","errorMessages","fetchNewMessage","NewMessage","onAddMessage","onError","text","setLabel","error","setError","setDate","date","hours","getHours","minutes","getMinutes","ampm","time","getMonth","getDate","getFullYear","appendMessage","e","preventDefault","timestamp","Date","then","message","catch","err","code","onChange","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAChD,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAd;AACA,QAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB;AACAE,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACA,QAAIG,IAAI,GAAGL,KAAK,GAAG,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,IAAzC;AACA,WACEL,IAAI,CAACO,QAAL,KACA,CADA,GAEA,GAFA,GAGAP,IAAI,CAACQ,OAAL,EAHA,GAIA,GAJA,GAKAR,IAAI,CAACS,WAAL,EALA,GAMA,IANA,GAOAH,IARF;AAUD,GAlBD;;AAoBA,QAAMI,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,SAAS,GAAGd,OAAO,CAAC,IAAIe,IAAJ,EAAD,CAAzB;AACAvB,IAAAA,eAAe,CAACI,IAAD,EAAOkB,SAAP,CAAf,CACGE,IADH,CACQC,OAAO,IAAI;AACfvB,MAAAA,YAAY,CAACuB,OAAD,CAAZ;AACApB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KALH,EAMGmB,KANH,CAMSC,GAAG,IAAI;AACZxB,MAAAA,OAAO,CAACwB,GAAG,CAACC,IAAL,CAAP;AACArB,MAAAA,QAAQ,CAACR,aAAa,CAAC4B,GAAG,CAACC,IAAJ,IAAY,SAAb,CAAd,CAAR;AACD,KATH;AAUD,GAbD;;AAeA,QAAMC,QAAQ,GAAGT,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACU,MAAF,CAASC,KAAV,CAA9B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,QAAQ,EAAEF,QAAjB;AAA2B,IAAA,KAAK,EAAEzB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,OAAO,EAAEe,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBb,KAAtB,CAHF,CADF;AAOD,CAhDD;;AAkDA,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport errorMessages from './errorMessages';\r\nimport { fetchNewMessage } from './services';\r\n\r\nconst NewMessage = ({ onAddMessage, onError }) => {\r\n  const [text, setLabel] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const setDate = date => {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    let time = hours + ':' + minutes + ' ' + ampm;\r\n    return (\r\n      date.getMonth() +\r\n      1 +\r\n      '/' +\r\n      date.getDate() +\r\n      '/' +\r\n      date.getFullYear() +\r\n      '  ' +\r\n      time\r\n    );\r\n  };\r\n\r\n  const appendMessage = e => {\r\n    e.preventDefault();\r\n    const timestamp = setDate(new Date());\r\n    fetchNewMessage(text, timestamp)\r\n      .then(message => {\r\n        onAddMessage(message);\r\n        setLabel('');\r\n        setError('');\r\n      })\r\n      .catch(err => {\r\n        onError(err.code);\r\n        setError(errorMessages[err.code || 'DEFAULT']);\r\n      });\r\n  };\r\n\r\n  const onChange = e => setLabel(e.target.value);\r\n\r\n  return (\r\n    <div className=\"append-message\">\r\n      <input onChange={onChange} value={text} />\r\n      <button onClick={appendMessage}>SEND</button>\r\n      <p className=\"error\">{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"]},"metadata":{},"sourceType":"module"}