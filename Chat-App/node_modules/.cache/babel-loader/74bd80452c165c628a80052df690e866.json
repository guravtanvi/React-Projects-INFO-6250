{"ast":null,"code":"import _slicedToArray from\"D:\\\\Information System\\\\info6250\\\\assignments\\\\react-chat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{fetchLoginStatus,fetchUsersData,fetchMessageData}from'./services';import Message from'./Message';import Navigation from'./Navigation';import useInterval from'./Interval';import NewMessage from'./NewMessage';import errorMessages from'./errorMessages';import Users from'./Users';import LoginPage from'./LoginPage';import'./app.css';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorState=_useState2[0],setErrorMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userListState=_useState4[0],setUserList=_useState4[1];var _useState5=useState({isLoggedIn:false}),_useState6=_slicedToArray(_useState5,2),userState=_useState6[0],setLoggedInState=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messageState=_useState8[0],setMessage=_useState8[1];var getChats=useCallback(function(){getUsers();getMessages();},[]);useEffect(function(){fetchLoginStatus().then(function(userInfo){setLoggedInState({isLoggedIn:true,username:userInfo.username});if(userState.isLoggedIn){getChats();}setErrorMessage('');}).catch(function(err){setErrorMessage(errorMessages[err.code||'DEFAULT']);});},[getChats,userState.isLoggedIn]);var login=function login(username){setLoggedInState({isLoggedIn:true,username:username});getChats();};var logout=function logout(){setLoggedInState({isLoggedIn:false});};var getUsers=function getUsers(){fetchUsersData().then(function(usersList){setUserList(Object.values(usersList));}).catch(function(err){setErrorMessage(errorMessages[err.code||'DEFAULT']);});};var getMessages=function getMessages(){fetchMessageData().then(function(messageList){setMessage(messageList);}).catch(function(err){setErrorMessage(errorMessages[err.code||'DEFAULT']);});};useInterval(function(){if(userState.isLoggedIn){getChats();}},3000);var content;var getErrorCode=function getErrorCode(errCode){if(errCode==='MANDATORY_LOGIN'||errCode==='UNAUTHORIZED_ACCESS'){logout();}};if(userState.isLoggedIn){content=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NewMessage,{onAddMessage:getMessages,onError:getErrorCode}),/*#__PURE__*/React.createElement(\"div\",{className:\"display-container\"},/*#__PURE__*/React.createElement(Users,{userList:userListState}),/*#__PURE__*/React.createElement(Message,{messageList:messageState})));}else{content=/*#__PURE__*/React.createElement(LoginPage,{loggedIn:login});}return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(Navigation,{user:userState,onLogout:logout,onError:getErrorCode}),/*#__PURE__*/React.createElement(\"p\",null,errorState),content);};export default App;","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","fetchLoginStatus","fetchUsersData","fetchMessageData","Message","Navigation","useInterval","NewMessage","errorMessages","Users","LoginPage","App","errorState","setErrorMessage","userListState","setUserList","isLoggedIn","userState","setLoggedInState","messageState","setMessage","getChats","getUsers","getMessages","then","userInfo","username","catch","err","code","login","logout","usersList","Object","values","messageList","content","getErrorCode","errCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { fetchLoginStatus, fetchUsersData, fetchMessageData } from './services';\nimport Message from './Message';\nimport Navigation from './Navigation';\nimport useInterval from './Interval';\nimport NewMessage from './NewMessage';\nimport errorMessages from './errorMessages';\nimport Users from './Users';\nimport LoginPage from './LoginPage';\nimport './app.css';\n\nconst App = () => {\n  const [errorState, setErrorMessage] = useState('');\n  const [userListState, setUserList] = useState([]);\n  const [userState, setLoggedInState] = useState({ isLoggedIn: false });\n  const [messageState, setMessage] = useState([]);\n  \n\n  const getChats = useCallback(() => {\n    getUsers();\n    getMessages();\n  }, []);\n\n  useEffect(() => {\n    fetchLoginStatus()\n      .then(userInfo => {\n        setLoggedInState({\n          isLoggedIn: true,\n          username: userInfo.username\n        });\n        if (userState.isLoggedIn) {\n          getChats();\n        }\n        setErrorMessage('');\n      })\n      .catch(err => {\n        setErrorMessage(errorMessages[err.code || 'DEFAULT']);\n      });\n  }, [getChats, userState.isLoggedIn]);\n\n  const login = username => {\n    setLoggedInState({\n      isLoggedIn: true,\n      username\n    });\n    getChats();\n  };\n\n  const logout = () => {\n    setLoggedInState({\n      isLoggedIn: false\n    });\n  };\n\n  const getUsers = () => {\n    fetchUsersData()\n      .then(usersList => {\n        setUserList(Object.values(usersList));\n      })\n      .catch(err => {\n        setErrorMessage(errorMessages[err.code || 'DEFAULT']);\n      });\n  };\n\n  const getMessages = () => {\n    fetchMessageData()\n      .then(messageList => {\n        setMessage(messageList);\n      })\n      .catch(err => {\n        setErrorMessage(errorMessages[err.code || 'DEFAULT']);\n      });\n  };\n\n  useInterval(() => {\n    if (userState.isLoggedIn) {\n      getChats();\n    }\n  }, 3000);\n\n  let content;\n\n  const getErrorCode = errCode => {\n    if (errCode === 'MANDATORY_LOGIN' || errCode === 'UNAUTHORIZED_ACCESS') {\n      logout();\n    }\n  };\n\n  if (userState.isLoggedIn) {\n    content = (\n      <React.Fragment>\n        <NewMessage onAddMessage={getMessages} onError={getErrorCode} />\n        <div className=\"display-container\">\n          <Users userList={userListState} />\n          <Message messageList={messageState} />\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    content = <LoginPage loggedIn={login} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Navigation user={userState} onLogout={logout} onError={getErrorCode} />\n      <p>{errorState}</p>\n      {content}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}