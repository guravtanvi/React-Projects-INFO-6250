{"ast":null,"code":"import _slicedToArray from\"D:\\\\Information System\\\\info6250\\\\assignments\\\\react-chat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import errorMessages from'./errorMessages';import{fetchNewMessage}from'./services';var NewMessage=function NewMessage(_ref){var onAddMessage=_ref.onAddMessage,onError=_ref.onError;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setLabel=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var setDate=function setDate(date){var hours=date.getHours();var minutes=date.getMinutes();var ampm=hours>=12?'pm':'am';hours=hours%12;hours=hours?hours:12;minutes=minutes<10?'0'+minutes:minutes;var time=hours+':'+minutes+' '+ampm;return date.getMonth()+1+'/'+date.getDate()+'/'+date.getFullYear()+'  '+time;};var appendMessage=function appendMessage(e){e.preventDefault();var timestamp=setDate(new Date());fetchNewMessage(text,timestamp).then(function(message){onAddMessage(message);setLabel('');setError('');}).catch(function(err){onError(err.code);setError(errorMessages[err.code||'DEFAULT']);});};var onChange=function onChange(e){return setLabel(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:\"append-message\"},/*#__PURE__*/React.createElement(\"input\",{onChange:onChange,value:text}),/*#__PURE__*/React.createElement(\"button\",{onClick:appendMessage},\"SEND\"),/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},error));};export default NewMessage;","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/NewMessage.jsx"],"names":["React","useState","errorMessages","fetchNewMessage","NewMessage","onAddMessage","onError","text","setLabel","error","setError","setDate","date","hours","getHours","minutes","getMinutes","ampm","time","getMonth","getDate","getFullYear","appendMessage","e","preventDefault","timestamp","Date","then","message","catch","err","code","onChange","target","value"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,eAAT,KAAgC,YAAhC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA+B,IAA5BC,CAAAA,YAA4B,MAA5BA,YAA4B,CAAdC,OAAc,MAAdA,OAAc,eACvBL,QAAQ,CAAC,EAAD,CADe,wCACzCM,IADyC,eACnCC,QADmC,8BAEtBP,QAAQ,CAAC,EAAD,CAFc,yCAEzCQ,KAFyC,eAElCC,QAFkC,eAIhD,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CACtB,GAAIC,CAAAA,KAAK,CAAGD,IAAI,CAACE,QAAL,EAAZ,CACA,GAAIC,CAAAA,OAAO,CAAGH,IAAI,CAACI,UAAL,EAAd,CACA,GAAIC,CAAAA,IAAI,CAAGJ,KAAK,EAAI,EAAT,CAAc,IAAd,CAAqB,IAAhC,CACAA,KAAK,CAAGA,KAAK,CAAG,EAAhB,CACAA,KAAK,CAAGA,KAAK,CAAGA,KAAH,CAAW,EAAxB,CACAE,OAAO,CAAGA,OAAO,CAAG,EAAV,CAAe,IAAMA,OAArB,CAA+BA,OAAzC,CACA,GAAIG,CAAAA,IAAI,CAAGL,KAAK,CAAG,GAAR,CAAcE,OAAd,CAAwB,GAAxB,CAA8BE,IAAzC,CACA,MACEL,CAAAA,IAAI,CAACO,QAAL,GACA,CADA,CAEA,GAFA,CAGAP,IAAI,CAACQ,OAAL,EAHA,CAIA,GAJA,CAKAR,IAAI,CAACS,WAAL,EALA,CAMA,IANA,CAOAH,IARF,CAUD,CAlBD,CAoBA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,CAAC,CAAI,CACzBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,SAAS,CAAGd,OAAO,CAAC,GAAIe,CAAAA,IAAJ,EAAD,CAAzB,CACAvB,eAAe,CAACI,IAAD,CAAOkB,SAAP,CAAf,CACGE,IADH,CACQ,SAAAC,OAAO,CAAI,CACfvB,YAAY,CAACuB,OAAD,CAAZ,CACApB,QAAQ,CAAC,EAAD,CAAR,CACAE,QAAQ,CAAC,EAAD,CAAR,CACD,CALH,EAMGmB,KANH,CAMS,SAAAC,GAAG,CAAI,CACZxB,OAAO,CAACwB,GAAG,CAACC,IAAL,CAAP,CACArB,QAAQ,CAACR,aAAa,CAAC4B,GAAG,CAACC,IAAJ,EAAY,SAAb,CAAd,CAAR,CACD,CATH,EAUD,CAbD,CAeA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAT,CAAC,QAAIf,CAAAA,QAAQ,CAACe,CAAC,CAACU,MAAF,CAASC,KAAV,CAAZ,EAAlB,CAEA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,6BAAO,QAAQ,CAAEF,QAAjB,CAA2B,KAAK,CAAEzB,IAAlC,EADF,cAEE,8BAAQ,OAAO,CAAEe,aAAjB,SAFF,cAGE,yBAAG,SAAS,CAAC,OAAb,EAAsBb,KAAtB,CAHF,CADF,CAOD,CAhDD,CAkDA,cAAeL,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport errorMessages from './errorMessages';\r\nimport { fetchNewMessage } from './services';\r\n\r\nconst NewMessage = ({ onAddMessage, onError }) => {\r\n  const [text, setLabel] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const setDate = date => {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    let time = hours + ':' + minutes + ' ' + ampm;\r\n    return (\r\n      date.getMonth() +\r\n      1 +\r\n      '/' +\r\n      date.getDate() +\r\n      '/' +\r\n      date.getFullYear() +\r\n      '  ' +\r\n      time\r\n    );\r\n  };\r\n\r\n  const appendMessage = e => {\r\n    e.preventDefault();\r\n    const timestamp = setDate(new Date());\r\n    fetchNewMessage(text, timestamp)\r\n      .then(message => {\r\n        onAddMessage(message);\r\n        setLabel('');\r\n        setError('');\r\n      })\r\n      .catch(err => {\r\n        onError(err.code);\r\n        setError(errorMessages[err.code || 'DEFAULT']);\r\n      });\r\n  };\r\n\r\n  const onChange = e => setLabel(e.target.value);\r\n\r\n  return (\r\n    <div className=\"append-message\">\r\n      <input onChange={onChange} value={text} />\r\n      <button onClick={appendMessage}>SEND</button>\r\n      <p className=\"error\">{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"]},"metadata":{},"sourceType":"module"}