{"ast":null,"code":"var _jsxFileName = \"D:\\\\Information System\\\\info6250\\\\assignments\\\\react-chat\\\\src\\\\App.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { fetchLoginStatus, fetchUsersData, fetchMessageData } from './services';\nimport useInterval from './Interval';\nimport Navigation from './Navigation';\nimport Login from './Login';\nimport Users from './Users';\nimport Message from './Message';\nimport NewMessage from './NewMessage';\nimport errorMessages from './errorMessages';\nimport './app.css';\n\nconst App = () => {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false\n  });\n  const [userListState, setuserListState] = useState([]);\n  const [messageState, setMessageState] = useState([]);\n  const [error, setError] = useState('');\n  const getChats = useCallback(() => {\n    getUsers();\n    getMessages();\n  }, []);\n  useEffect(() => {\n    fetchLoginStatus().then(userInfo => {\n      setUserState({\n        isLoggedIn: true,\n        username: userInfo.username\n      });\n\n      if (userState.isLoggedIn) {\n        getChats();\n      }\n\n      setError('');\n    }).catch(err => {\n      setError(errorMessages[err.code || 'DEFAULT']);\n    });\n  }, [getChats, userState.isLoggedIn]);\n\n  const login = username => {\n    setUserState({\n      isLoggedIn: true,\n      username\n    });\n    getChats();\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  const getUsers = () => {\n    fetchUsersData().then(usersList => {\n      setuserListState(Object.values(usersList));\n    }).catch(err => {\n      setError(errorMessages[err.code || 'DEFAULT']);\n    });\n  };\n\n  const getMessages = () => {\n    fetchMessage().then(messageList => {\n      setMessageState(messageList);\n    }).catch(err => {\n      setError(errorMessages[err.code || 'DEFAULT']);\n    });\n  };\n\n  useInterval(() => {\n    if (userState.isLoggedIn) {\n      getChats();\n    }\n  }, 3000);\n  let content;\n\n  const checkError = errCode => {\n    if (errCode === 'MANDATORY_LOGIN' || errCode === 'UNAUTHORIZED_ACCESS') {\n      logout();\n    }\n  };\n\n  if (userState.isLoggedIn) {\n    content = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NewMessage, {\n      onAddMessage: getMessages,\n      onError: checkError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Users, {\n      userList: userListState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Message, {\n      messageList: messageState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    content = /*#__PURE__*/React.createElement(Login, {\n      onLogin: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    user: userState,\n    onLogout: logout,\n    onError: checkError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, error), content);\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Information System/info6250/assignments/react-chat/src/App.jsx"],"names":["React","useState","useEffect","useCallback","fetchLoginStatus","fetchUsersData","fetchMessageData","useInterval","Navigation","Login","Users","Message","NewMessage","errorMessages","App","userState","setUserState","isLoggedIn","userListState","setuserListState","messageState","setMessageState","error","setError","getChats","getUsers","getMessages","then","userInfo","username","catch","err","code","login","logout","usersList","Object","values","fetchMessage","messageList","content","checkError","errCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { fetchLoginStatus, fetchUsersData, fetchMessageData } from './services';\nimport useInterval from './Interval';\nimport Navigation from './Navigation';\nimport Login from './Login';\nimport Users from './Users';\nimport Message from './Message';\nimport NewMessage from './NewMessage';\nimport errorMessages from './errorMessages';\nimport './app.css';\n\nconst App = () => {\n  const [userState, setUserState] = useState({ isLoggedIn: false });\n  const [userListState, setuserListState] = useState([]);\n  const [messageState, setMessageState] = useState([]);\n  const [error, setError] = useState('');\n\n  const getChats = useCallback(() => {\n    getUsers();\n    getMessages();\n  }, []);\n\n  useEffect(() => {\n    fetchLoginStatus()\n      .then(userInfo => {\n        setUserState({\n          isLoggedIn: true,\n          username: userInfo.username\n        });\n        if (userState.isLoggedIn) {\n          getChats();\n        }\n        setError('');\n      })\n      .catch(err => {\n        setError(errorMessages[err.code || 'DEFAULT']);\n      });\n  }, [getChats, userState.isLoggedIn]);\n\n  const login = username => {\n    setUserState({\n      isLoggedIn: true,\n      username\n    });\n    getChats();\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  const getUsers = () => {\n    fetchUsersData()\n      .then(usersList => {\n        setuserListState(Object.values(usersList));\n      })\n      .catch(err => {\n        setError(errorMessages[err.code || 'DEFAULT']);\n      });\n  };\n\n  const getMessages = () => {\n    fetchMessage()\n      .then(messageList => {\n        setMessageState(messageList);\n      })\n      .catch(err => {\n        setError(errorMessages[err.code || 'DEFAULT']);\n      });\n  };\n\n  useInterval(() => {\n    if (userState.isLoggedIn) {\n      getChats();\n    }\n  }, 3000);\n\n  let content;\n\n  const checkError = errCode => {\n    if (errCode === 'MANDATORY_LOGIN' || errCode === 'UNAUTHORIZED_ACCESS') {\n      logout();\n    }\n  };\n\n  if (userState.isLoggedIn) {\n    content = (\n      <React.Fragment>\n        <NewMessage onAddMessage={getMessages} onError={checkError} />\n        <div className=\"display-container\">\n          <Users userList={userListState} />\n          <Message messageList={messageState} />\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    content = <Login onLogin={login} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Navigation user={userState} onLogout={logout} onError={checkError} />\n      <p>{error}</p>\n      {content}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}